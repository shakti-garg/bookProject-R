head(data)
class(data$Percentile)
class(data$CharacterName)
class(data$ChapterName)
data$Percentile <- as.numeric(data$Percentile)
data$CharacterName <- as.factor(data$CharacterName)
data$ChapterName <- as.factor(data$ChapterName)
summary(data$Percentile)
summary(data$CharacterName)
summary(data$ChapterName)
library(ggplot2)
cGraph <- ggplot(data, aes(x=Percentile, y=CharacterName))
cGraph <- cGraph + geom_point(shape="|")
cGraph <- cGraph + scale_x_discrete("Chapter", labels=c(c(" "),unique(as.character(data$ChapterName))))
cGraph <- cGraph + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks = element_blank())
cGraph
summary(data)
data$BookName <- as.factor(data$BookName)
summary(data$BookName)
summary(data$ChapterName)
setwd("F:/R-Workspace/book")
data <- read.csv(file="data/1-occurence.csv", as.is=TRUE);
head(data)
class(data$Percentile)
class(data$CharacterName)
class(data$ChapterName)
data$BookName <- as.factor(data$BookName)
data$ChapterName <- as.factor(data$ChapterName)
data$CharacterName <- as.factor(data$CharacterName)
data$Percentile <- as.numeric(data$Percentile)
summary(data$BookName)
summary(data$ChapterName)
summary(data$CharacterName)
summary(data$Percentile)
library(ggplot2)
cGraph <- ggplot(data, aes(x=Percentile, y=CharacterName))
cGraph <- cGraph + geom_point(shape="|")
cGraph <- cGraph + scale_x_discrete("Chapter", labels=c(c(" "),unique(as.character(data$ChapterName))))
cGraph <- cGraph + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks = element_blank())
cGraph
summary(data$BookName)
summary(data$ChapterName)
runExample("06_tabsets")
load("shiny")
library(shiny)
runExample("06_tabsets")
unique(data$BookName)
unique(data$BookName)[0]
list(unique(data$BookName))
list(unique(data$BookName))[0]
list(unique(data$BookName))[[0]
]
list(unique(data$BookName))[[0]]
list(unique(data$BookName))[[1]]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runExample("06_tabsets")
shiny::runApp()
shiny::runApp()
shiny::runApp()
occData[,1]
data[,1]
data[BookName='The Oath of The Vayuputras'][]
data[BookName=='The Oath of The Vayuputras'][]
data[data$BookName=='The Oath of The Vayuputras'][]
data[data$BookName=='The Oath of The Vayuputras',]
shiny::runApp()
sdata <- read.csv(file="data/2-sentiment.csv", as.is=TRUE);
head(sdata)
summary(sdata)
data$BookName <- as.factor(data$BookName)
data$ChapterName <- as.factor(data$ChapterName)
data$CharacterName <- as.factor(data$CharacterName)
data$Percentile <- as.numeric(data$Percentile)
data$Sentiment <- as.factor(data$Sentiment)
summary(data$BookName)
summary(data$ChapterName)
summary(data$CharacterName)
summary(data$Percentile)
summary(data$Sentiment)
summary(data$BookName)
summary(data$ChapterName)
summary(data$CharacterName)
summary(data$Percentile)
summary(data$Sentiment)
sdata$BookName <- as.factor(sdata$BookName)
sdata$ChapterName <- as.factor(sdata$ChapterName)
sdata$CharacterName <- as.factor(sdata$CharacterName)
sdata$Percentile <- as.numeric(sdata$Percentile)
sdata$Sentiment <- as.factor(sdata$Sentiment)
summary(sdata$BookName)
summary(sdata$ChapterName)
summary(sdata$CharacterName)
summary(sdata$Percentile)
summary(sdata$Sentiment)
shiny::runApp()
colorMapping <- list("A"="red","B"="blue")
colorMapping = list("A"="red","B"="blue")
colorMapping["A"]
summary(data$Sentiment)
summary(sdata$Sentiment)
head(sdata$Sentiment)
shiny::runApp()
sentimentColor <- function(sentiLevel){
color <- switch(sentiLevel,
"Very Negative" = "dark red",
"Negative" = "red",
"Neutral" = "yellow",
"Positive" = "green",
"Very Positive" = "dark green")
color
}
sentimentColor("Positive")
shiny::runApp()
shiny::runApp()
?lapply
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(data)
shiny::runApp()
remove(sentimentColor)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?switch
shiny::runApp()
shiny::runApp()
shiny::runApp()
head(sdata)
colname(sdata)
colnames(sdata)
sdata <- sdata[,c(1:5)]
colnames(sdata)
sdata$SentimentColor <- lapply(sdata$Sentiment, sentiColorFn)
sentiColorFn <- function(sentiLevel) {
color <- switch(as.character(sentiLevel),
"Very Negative" = "#CC0000",
"Negative" = "#FF0033",
"Neutral" = "#FFFF00",
"Positive" = "#66FF00",
"Very Positive" = "#006600")
color
}
sdata$SentimentColor <- lapply(sdata$Sentiment, sentiColorFn)
colnames(sdata)
head(sdata)
cGraph <- ggplot(plotData, aes(x=Percentile, y=CharacterName, color=SentimentColor), environment = environment())
cGraph <- ggplot(sdata, aes(x=Percentile, y=CharacterName, color=SentimentColor), environment = environment())
cGraph <- cGraph + geom_point(shape="|")
cGraph
cGraph <- ggplot(sdata, aes(x=Percentile, y=CharacterName, color=as.factor(SentimentColor)), environment = environment())
cGraph <- cGraph + geom_point(shape="|")
cGraph
cGraph <- ggplot(sdata, aes(x=Percentile, y=CharacterName))
cGraph + geom_point(shape="|")
cGraph + geom_point(shape="|", aes(color=sdata$SentimentColor))
class(sdata$SentimentCOlor)
head(sdata$SentimentCOlor)
head(sdata)
colnames(sdata)
head(sdata$SentimentColor)
class(sdata$SentimentColor)
class(sdata$SentimentCOlor)
class(sdata$SentimentColor)
sentiColorFn <- function(sentiLevel) {
color <- switch(as.character(sentiLevel),
"Very Negative" = "#CC0000",
"Negative" = "#FF0033",
"Neutral" = "#FFFF00",
"Positive" = "#66FF00",
"Very Positive" = "#006600")
c(color)
}
sdata$SentimentColor <- lapply(sdata$Sentiment, sentiColorFn)
class(sdata$SentimentColor)
head(sdata$SentimentColor)
?lapply
sdata$SentimentColor <- sapply(sdata$Sentiment, sentiColorFn)
class(sdata$SentimentColor)
sdata$SentimentColor1 <- sapply(sdata$Sentiment, sentiColorFn)
class(sdata$SentimentColor1)
head(sdata$SentimentColor1)
class(as.vector(sdata$SentimentColor))
class(deflat(sdata$SentimentColor))
unlist(sdata$SentimentColor)
class(unlist(sdata$SentimentColor))
shiny::runApp()
count(sdata$SentimentColor)
ncols(sdata$SentimentColor)
num(sdata$SentimentColor)
size(sdata$SentimentColor)
length(sdata$SentimentColor)
length(sdata)
nrows(sdata)
nrow(sdata)
ncols(sdata)
ncol(sdata)
length(unlist(sdata$SentimentColor))
length(as.character(unlist(sdata$SentimentColor)))
length(sdata$Sentiment)
length(do.call(c,sdata$SentimentColor))
shiny::runApp()
length(unlist(sdata$SentimentColor))
length(relist(unlist(sdata$SentimentColor)))
summary(sdata$Sentiment)
shiny::runApp()
?ggplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
summary(as.factor(sentiData$Sentiment))
summary(as.factor(sdata$Sentiment))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?renderPlot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?floor
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
sequence(1,4)
?sequence
seq(5)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
charLabels <- unique(as.character(plotData$ChapterName))
charLabels <- unique(as.character(data$ChapterName))
charLabels
seq(length(charLabels))
shiny::runApp()
shiny::runApp()
remove(data)
data <- read.csv(file="data/1-appearance.csv", as.is=TRUE);
head(data)
class(data$Percentile)
class(data$CharacterName)
class(data$ChapterName)
data$BookName <- as.factor(data$BookName)
data$ChapterName <- as.factor(data$ChapterName)
data$CharacterName <- as.factor(data$CharacterName)
data$Percentile <- as.numeric(data$Percentile)
summary(data$BookName)
summary(data$ChapterName)
summary(data$CharacterName)
summary(data$Percentile)
summary(data$BookName)
data <- data[data$BookName == "Immortals of Meluha", ]
nrow(data)
charLabels <- unique(as.character(data$ChapterName))
length(charLabels)
shiny::runApp()
cGraph <- ggplot(data, aes(x=Percentile, y=CharacterName))
cGraph <- cGraph + geom_point(shape="|", size=3, alpha=0.8)
cGraph
cGraph + scale_x_continuous("Chapter")
shiny::runApp()
cGraph + scale_x_continuous("Chapter", breaks=seq(length(charLabels))+0.5)
cGraph + scale_x_continuous("Chapter", breaks=seq(length(charLabels))+0.5, labels=charLabels)
cGraph + scale_x_continuous("Chapter", breaks=seq(length(charLabels))+0.5, labels=charLabels) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks = element_blank())
cGraph + scale_x_continuous("Chapter", breaks=seq(length(charLabels))+0.5, labels=charLabels) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks = element_blank())
cGraph + scale_x_continuous("Chapter", expand=c(0,0), breaks=seq(length(charLabels))+0.5, labels=charLabels) + theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.ticks = element_blank())
shiny::runApp()
shiny::runApp()
shiny::runApp()
clear()
shiny::runApp()
shiny::runApp()
?seq
seq(0,4)
?exp
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?geom_point
shiny::runApp()
print("a")
shiny::runApp()
shiny::runApp()
shiny::runApp()
?runif
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
print("a"+"b")
print("a"|"b")
print("a"||"b")
print("a","b")
print(c("a","b")
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?updatePlot
?update
?observe
shiny::runApp()
?radioButtons
?renderPlot
?isolate
?radioButtons
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?table
?order
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?order
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?level
?levels
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?log
log(17)
log(17)* 0.96
shiny::runApp()
shiny::runApp()
shiny::runApp()
log(50)
log(50) *0.96
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?scale_colour_gradient
shiny::runApp()
shiny::runApp()
?scale_color_brewer
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?scale_color_brewer
?scale_color_manual
shiny::runApp()
shiny::runApp()
shiny::runApp()
?guide_colorbar
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?scale_fill_manual
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?scale_shape_discrete
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
(d <- qplot(carat, price, data=dsmall, shape=cut))
head(dsmall)
d + scale_shape(solid = TRUE)
d
d + scale_shape(solid = TRUE)
d
d + scale_shape(solid = TRUE)
d + scale_shape(solid = FALSE)
d + scale_shape(solid = TRUE)
d + scale_shape(solid = FALSE)
?scale_legend
?legend
shiny::runApp()
shiny::runApp()
?scale_color_manual
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?sliderInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
?observe
shiny::runApp()
shiny::runApp()
a <- c("a","b","c")
a
a[1]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
